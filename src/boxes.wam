;;=============================================================================
;;
;; Box values
;;
;; A box is essentially an alias for pair.  It's meant to distinguish the source
;; usage of a pair generally from that where the car of the pair encodes a tag
;; and flags describing how to interpret the cdr.  Boxes will also therefore
;; have special treatment by the garbage collector, depending on the type.

(macro %get-box-type
  (expr ,box)
  ($get-pair-car (%get-value-data ,box)))

(macro %get-box-value
  (expr ,box)
  ($get-pair-cdr (%get-value-data ,box)))

(macro %get-box-value-f32
  (expr ,box)
  ($get-pair-cdr-f32 (%get-value-data ,box)))

(macro %set-box-type
  (expr ,box)
  (expr ,type)
  ($set-pair-car (%get-value-data ,box) ,type))

(macro %set-box-value
  (expr ,box)
  (expr ,value)
  ($set-pair-cdr (%get-value-data ,box) ,value))

(macro %set-box-value-f32
  (expr ,box)
  (expr ,value)
  ($set-pair-cdr-f32 (%get-value-data ,box) ,value))

(macro %dealloc-box
  (expr ,box)
  ($dealloc-pair (%get-value-data ,box)))

(macro %make-box
  (expr ,box-type)
  (expr ,value)
  (i32.or _tag-box ($make-pair ,box-type ,value)))

(macro %make-box-f32
  (expr ,box-type)
  (expr ,value)
  (i32.or _tag-box ($make-pair-f32 ,box-type ,value)))
