;; todo rename file since it contains rule ids and string defs
(define _string-paren-charset              (global.get $string-paren-charset))
(define _string-token-charset              (global.get $string-token-charset))
(define _string-begin-vector               (global.get $string-begin-vector))
(define _string-begin-bytevector           (global.get $string-begin-bytevector))
(define _string-unquote-splicing           (global.get $string-unquote-splicing))
(define _string-delimiter-charset          (global.get $string-delimiter-charset))
(define _string-intraline-whitespace       (global.get $string-intraline-whitespace))
(define _string-line-ending-charset        (global.get $string-line-ending-charset))
(define _string-dos-line-ending            (global.get $string-dos-line-ending))
(define _string-begin-datum-comment        (global.get $string-begin-datum-comment))
(define _string-begin-nested-comment       (global.get $string-begin-nested-comment))
(define _string-end-nested-comment         (global.get $string-end-nested-comment))
(define _string-directive-fold-case        (global.get $string-directive-fold-case))
(define _string-directive-no-fold-case     (global.get $string-directive-no-fold-case))
(define _string-special-initials           (global.get $string-special-initials))
(define _string-explicit-sign-charset      (global.get $string-explicit-sign-charset))
(define _string-special-subsequent-charset (global.get $string-special-subsequent-charset))
(define _string-inline-escape-prefix       (global.get $string-inline-escape-prefix))
(define _string-mnemonic-escapes           (global.get $string-mnemonic-escapes))
(define _string-boolean-t                  (global.get $string-boolean-t))
(define _string-boolean-f                  (global.get $string-boolean-f))
(define _string-boolean-true               (global.get $string-boolean-true))
(define _string-boolean-false              (global.get $string-boolean-false))
(define _string-character-prefix           (global.get $string-character-prefix))
(define _string-character-hex-prefix       (global.get $string-character-hex-prefix))
(define _string-alarm                      (global.get $string-alarm))
(define _string-backspace                  (global.get $string-backspace))
(define _string-delete                     (global.get $string-delete))
(define _string-escape                     (global.get $string-escape))
(define _string-newline                    (global.get $string-newline))
(define _string-null                       (global.get $string-null))
(define _string-return                     (global.get $string-return))
(define _string-space                      (global.get $string-space))
(define _string-tab                        (global.get $string-tab))
(define _string-inf                        (global.get $string-inf))
(define _string-nan                        (global.get $string-nan))
(define _string-empty                      (global.get $string-empty))
(define _string-exact-prefix               (global.get $string-exact-prefix))
(define _string-inexact-prefix             (global.get $string-inexact-prefix))
(define _string-radix-2                    (global.get $string-radix-2))
(define _string-radix-8                    (global.get $string-radix-8))
(define _string-radix-10                   (global.get $string-radix-10))
(define _string-radix-16                   (global.get $string-radix-16))

(define _lex-rule-delimited-token                 (+rule-id))
(define _lex-rule-paren-char                      (+rule-id))
(define _lex-rule-undelimited-token               (+rule-id))
(define _lex-rule-token/group-1                   (+rule-id))
(define _lex-rule-token/group-2                   (+rule-id))
(define _lex-rule-token-char                      (+rule-id))
(define _lex-rule-delimited-token-string          (+rule-id))
(define _lex-rule-unquote-splicing                (+rule-id))
(define _lex-rule-delimiter                       (+rule-id))
(define _lex-rule-intraline-whitespace            (+rule-id))
(define _lex-rule-whitespace                      (+rule-id))
(define _lex-rule-vertical-line                   (+rule-id))
(define _lex-rule-line-ending                     (+rule-id))
(define _lex-rule-line-ending-char                (+rule-id))
(define _lex-rule-dos-line-ending                 (+rule-id))
(define _lex-rule-comment                         (+rule-id))
(define _lex-rule-simple-comment                  (+rule-id))
(define _lex-rule-semicolon                       (+rule-id))
(define _lex-rule-simple-comment-continuation     (+rule-id))
(define _lex-rule-datum-comment                   (+rule-id))
(define _lex-rule-begin-datum-comment             (+rule-id))
(define _lex-rule-nested-comment                  (+rule-id))
(define _lex-rule-begin-nested-comment            (+rule-id))
(define _lex-rule-comment-continuations           (+rule-id))
(define _lex-rule-end-nested-comment              (+rule-id))
(define _lex-rule-comment-text                    (+rule-id))
(define _lex-rule-nested-comment-delimiters       (+rule-id))
(define _lex-rule-comment-continuation            (+rule-id))
(define _lex-rule-directive                       (+rule-id))
(define _lex-rule-atmosphere                      (+rule-id))
(define _lex-rule-intertoken-space                (+rule-id))
(define _lex-rule-identifier                      (+rule-id))
(define _lex-rule-ordinary-identifier             (+rule-id))
(define _lex-rule-subsequents                     (+rule-id))
(define _lex-rule-vertical-line-quoted-symbol     (+rule-id))
(define _lex-rule-symbol-elements                 (+rule-id))
(define _lex-rule-initial                         (+rule-id))
(define _lex-rule-letter                          (+rule-id))
(define _lex-rule-lowercase-letter                (+rule-id))
(define _lex-rule-uppercase-letter                (+rule-id))
(define _lex-rule-special-initial                 (+rule-id))
(define _lex-rule-subsequent                      (+rule-id))
(define _lex-rule-digit                           (+rule-id))
(define _lex-rule-explicit-sign                   (+rule-id))
(define _lex-rule-special-subsequent              (+rule-id))
(define _lex-rule-inline-hex-escape               (+rule-id))
(define _lex-rule-inline-hex-escape-prefix        (+rule-id))
(define _lex-rule-hex-scalar-value                (+rule-id))
(define _lex-rule-mnemonic-escape                 (+rule-id))
(define _lex-rule-backslash                       (+rule-id))
(define _lex-rule-mnemonic-escape-character       (+rule-id))
(define _lex-rule-peculiar-identifier             (+rule-id))
(define _lex-rule-peculiar-identifier/form-1      (+rule-id))
(define _lex-rule-peculiar-identifier/form-2      (+rule-id))
(define _lex-rule-dot                             (+rule-id))
(define _lex-rule-peculiar-identifier/form-3      (+rule-id))
(define _lex-rule-dot-subsequent                  (+rule-id))
(define _lex-rule-sign-subsequent                 (+rule-id))
(define _lex-rule-at-sign                         (+rule-id))
(define _lex-rule-symbol-element                  (+rule-id))
(define _lex-rule-symbol-element/character        (+rule-id))
(define _lex-rule-escaped-vertical-line           (+rule-id))
(define _lex-rule-boolean                         (+rule-id))
(define _lex-rule-character                       (+rule-id))
(define _lex-rule-escaped-character               (+rule-id))
(define _lex-rule-single-character                (+rule-id))
(define _lex-rule-character-prefix                (+rule-id))
(define _lex-rule-named-character                 (+rule-id))
(define _lex-rule-escaped-character-hex           (+rule-id))
(define _lex-rule-character-hex-prefix            (+rule-id))
(define _lex-rule-character-name                  (+rule-id))
(define _lex-rule-character-name/group-1          (+rule-id))
(define _lex-rule-character-name/group-2          (+rule-id))
(define _lex-rule-character-name/group-3          (+rule-id))
(define _lex-rule-quoted-string                   (+rule-id))
(define _lex-rule-double-quote                    (+rule-id))
(define _lex-rule-string-elements                 (+rule-id))
(define _lex-rule-string-element                  (+rule-id))
(define _lex-rule-string-element/character        (+rule-id))
(define _lex-rule-string-element/character-escape (+rule-id))
(define _lex-rule-escaped-double-quote            (+rule-id))
(define _lex-rule-escaped-backslash               (+rule-id))
(define _lex-rule-escaped-line-ending             (+rule-id))
(define _lex-rule-some-intraline-whitespace       (+rule-id))
(define _lex-rule-number                          (+rule-id))
(define _lex-rule-num-2                           (+rule-id))
(define _lex-rule-num-8                           (+rule-id))
(define _lex-rule-num-10                          (+rule-id))
(define _lex-rule-num-16                          (+rule-id))
(define _lex-rule-complex-16                      (+rule-id))
(define _lex-rule-complex-10                      (+rule-id))
(define _lex-rule-complex-8                       (+rule-id))
(define _lex-rule-complex-2                       (+rule-id))
(define _lex-rule-simple-im                       (+rule-id))
(define _lex-rule-unit-im                         (+rule-id))
(define _lex-rule-complex-i                       (+rule-id))
(define _lex-rule-infnan-im                       (+rule-id))
(define _lex-rule-complex-16/group-1              (+rule-id))
(define _lex-rule-complex-10/group-1              (+rule-id))
(define _lex-rule-complex-8/group-1               (+rule-id))
(define _lex-rule-complex-2/group-1               (+rule-id))
(define _lex-rule-complex-polar-16                (+rule-id))
(define _lex-rule-complex-polar-10                (+rule-id))
(define _lex-rule-complex-polar-8                 (+rule-id))
(define _lex-rule-complex-polar-2                 (+rule-id))
(define _lex-rule-complex-infnan-im-16            (+rule-id))
(define _lex-rule-complex-infnan-im-10            (+rule-id))
(define _lex-rule-complex-infnan-im-8             (+rule-id))
(define _lex-rule-complex-infnan-im-2             (+rule-id))
(define _lex-rule-complex-16/group-2              (+rule-id))
(define _lex-rule-complex-10/group-2              (+rule-id))
(define _lex-rule-complex-8/group-2               (+rule-id))
(define _lex-rule-complex-2/group-2               (+rule-id))
(define _lex-rule-full-complex-16                 (+rule-id))
(define _lex-rule-full-complex-10                 (+rule-id))
(define _lex-rule-full-complex-8                  (+rule-id))
(define _lex-rule-full-complex-2                  (+rule-id))
(define _lex-rule-complex-unit-im-16              (+rule-id))
(define _lex-rule-complex-unit-im-10              (+rule-id))
(define _lex-rule-complex-unit-im-8               (+rule-id))
(define _lex-rule-complex-unit-im-2               (+rule-id))
(define _lex-rule-complex-im-only-16              (+rule-id))
(define _lex-rule-complex-im-only-10              (+rule-id))
(define _lex-rule-complex-im-only-8               (+rule-id))
(define _lex-rule-complex-im-only-2               (+rule-id))
(define _lex-rule-real-16                         (+rule-id))
(define _lex-rule-real-10                         (+rule-id))
(define _lex-rule-real-8                          (+rule-id))
(define _lex-rule-real-2                          (+rule-id))
(define _lex-rule-signed-real-16                  (+rule-id))
(define _lex-rule-signed-real-10                  (+rule-id))
(define _lex-rule-signed-real-8                   (+rule-id))
(define _lex-rule-signed-real-2                   (+rule-id))
(define _lex-rule-ureal-16                        (+rule-id))
(define _lex-rule-ureal-10                        (+rule-id))
(define _lex-rule-ureal-8                         (+rule-id))
(define _lex-rule-ureal-2                         (+rule-id))
(define _lex-rule-urational-16                    (+rule-id))
(define _lex-rule-urational-10                    (+rule-id))
(define _lex-rule-urational-8                     (+rule-id))
(define _lex-rule-urational-2                     (+rule-id))
(define _lex-rule-slash                           (+rule-id))
(define _lex-rule-decimal-10                      (+rule-id))
(define _lex-rule-decimal-10-forms                (+rule-id))
(define _lex-rule-dot-digits-10                   (+rule-id))
(define _lex-rule-digits-10                       (+rule-id))
(define _lex-rule-digits-dot-digits-10            (+rule-id))
(define _lex-rule-digits-10?                      (+rule-id))
(define _lex-rule-uinteger-16                     (+rule-id))
(define _lex-rule-uinteger-10                     (+rule-id))
(define _lex-rule-uinteger-8                      (+rule-id))
(define _lex-rule-uinteger-2                      (+rule-id))
(define _lex-rule-prefix-16                       (+rule-id))
(define _lex-rule-prefix-10                       (+rule-id))
(define _lex-rule-prefix-8                        (+rule-id))
(define _lex-rule-prefix-2                        (+rule-id))
(define _lex-rule-infnan                          (+rule-id))
(define _lex-rule-inf-or-nan                      (+rule-id))
(define _lex-rule-suffix                          (+rule-id))
(define _lex-rule-suffix-sequence                 (+rule-id))
(define _lex-rule-exponent-marker                 (+rule-id))
(define _lex-rule-sign                            (+rule-id))
(define _lex-rule-exactness                       (+rule-id))
(define _lex-rule-radix-2                         (+rule-id))
(define _lex-rule-radix-8                         (+rule-id))
(define _lex-rule-radix-10                        (+rule-id))
(define _lex-rule-radix-16                        (+rule-id))
(define _lex-rule-digit-2                         (+rule-id))
(define _lex-rule-digit-8                         (+rule-id))
(define _lex-rule-digit-10                        (+rule-id))
(define _lex-rule-digit-16                        (+rule-id))
(define _lex-rule-digit-16/A-F                    (+rule-id))
(define _lex-rule-digit-16/a-f                    (+rule-id))

(global $lex-rule-delimited-token                 (debug (export "lex-rule-delimited-token"))                 i32 _lex-rule-delimited-token)
(global $lex-rule-paren-char                      (debug (export "lex-rule-paren-char"))                      i32 _lex-rule-paren-char)
(global $lex-rule-undelimited-token               (debug (export "lex-rule-undelimited-token"))               i32 _lex-rule-undelimited-token)
(global $lex-rule-token/group-1                   (debug (export "lex-rule-token/group-1"))                   i32 _lex-rule-token/group-1)
(global $lex-rule-token/group-2                   (debug (export "lex-rule-token/group-2"))                   i32 _lex-rule-token/group-2)
(global $lex-rule-token-char                      (debug (export "lex-rule-token-char"))                      i32 _lex-rule-token-char)
(global $lex-rule-delimited-token-string          (debug (export "lex-rule-delimited-token-string"))          i32 _lex-rule-delimited-token-string)
(global $lex-rule-unquote-splicing                (debug (export "lex-rule-unquote-splicing"))                i32 _lex-rule-unquote-splicing)
(global $lex-rule-delimiter                       (debug (export "lex-rule-delimiter"))                       i32 _lex-rule-delimiter)
(global $lex-rule-intraline-whitespace            (debug (export "lex-rule-intraline-whitespace"))            i32 _lex-rule-intraline-whitespace)
(global $lex-rule-whitespace                      (debug (export "lex-rule-whitespace"))                      i32 _lex-rule-whitespace)
(global $lex-rule-vertical-line                   (debug (export "lex-rule-vertical-line"))                   i32 _lex-rule-vertical-line)
(global $lex-rule-line-ending                     (debug (export "lex-rule-line-ending"))                     i32 _lex-rule-line-ending)
(global $lex-rule-line-ending-char                (debug (export "lex-rule-line-ending-char"))                i32 _lex-rule-line-ending-char)
(global $lex-rule-dos-line-ending                 (debug (export "lex-rule-dos-line-ending"))                 i32 _lex-rule-dos-line-ending)
(global $lex-rule-comment                         (debug (export "lex-rule-comment"))                         i32 _lex-rule-comment)
(global $lex-rule-simple-comment                  (debug (export "lex-rule-simple-comment"))                  i32 _lex-rule-simple-comment)
(global $lex-rule-semicolon                       (debug (export "lex-rule-semicolon"))                       i32 _lex-rule-semicolon)
(global $lex-rule-simple-comment-continuation     (debug (export "lex-rule-simple-comment-continuation"))     i32 _lex-rule-simple-comment-continuation)
(global $lex-rule-datum-comment                   (debug (export "lex-rule-datum-comment"))                   i32 _lex-rule-datum-comment)
(global $lex-rule-begin-datum-comment             (debug (export "lex-rule-begin-datum-comment"))             i32 _lex-rule-begin-datum-comment)
(global $lex-rule-nested-comment                  (debug (export "lex-rule-nested-comment"))                  i32 _lex-rule-nested-comment)
(global $lex-rule-begin-nested-comment            (debug (export "lex-rule-begin-nested-comment"))            i32 _lex-rule-begin-nested-comment)
(global $lex-rule-comment-continuations           (debug (export "lex-rule-comment-continuations"))           i32 _lex-rule-comment-continuations)
(global $lex-rule-end-nested-comment              (debug (export "lex-rule-end-nested-comment"))              i32 _lex-rule-end-nested-comment)
(global $lex-rule-comment-text                    (debug (export "lex-rule-comment-text"))                    i32 _lex-rule-comment-text)
(global $lex-rule-nested-comment-delimiters       (debug (export "lex-rule-nested-comment-delimiters"))       i32 _lex-rule-nested-comment-delimiters)
(global $lex-rule-comment-continuation            (debug (export "lex-rule-comment-continuation"))            i32 _lex-rule-comment-continuation)
(global $lex-rule-directive                       (debug (export "lex-rule-directive"))                       i32 _lex-rule-directive)
(global $lex-rule-atmosphere                      (debug (export "lex-rule-atmosphere"))                      i32 _lex-rule-atmosphere)
(global $lex-rule-intertoken-space                (debug (export "lex-rule-intertoken-space"))                i32 _lex-rule-intertoken-space)
(global $lex-rule-identifier                      (debug (export "lex-rule-identifier"))                      i32 _lex-rule-identifier)
(global $lex-rule-ordinary-identifier             (debug (export "lex-rule-ordinary-identifier"))             i32 _lex-rule-ordinary-identifier)
(global $lex-rule-subsequents                     (debug (export "lex-rule-subsequents"))                     i32 _lex-rule-subsequents)
(global $lex-rule-vertical-line-quoted-symbol     (debug (export "lex-rule-vertical-line-quoted-symbol"))     i32 _lex-rule-vertical-line-quoted-symbol)
(global $lex-rule-symbol-elements                 (debug (export "lex-rule-symbol-elements"))                 i32 _lex-rule-symbol-elements)
(global $lex-rule-initial                         (debug (export "lex-rule-initial"))                         i32 _lex-rule-initial)
(global $lex-rule-letter                          (debug (export "lex-rule-letter"))                          i32 _lex-rule-letter)
(global $lex-rule-lowercase-letter                (debug (export "lex-rule-lowercase-letter"))                i32 _lex-rule-lowercase-letter)
(global $lex-rule-uppercase-letter                (debug (export "lex-rule-uppercase-letter"))                i32 _lex-rule-uppercase-letter)
(global $lex-rule-special-initial                 (debug (export "lex-rule-special-initial"))                 i32 _lex-rule-special-initial)
(global $lex-rule-subsequent                      (debug (export "lex-rule-subsequent"))                      i32 _lex-rule-subsequent)
(global $lex-rule-digit                           (debug (export "lex-rule-digit"))                           i32 _lex-rule-digit)
(global $lex-rule-explicit-sign                   (debug (export "lex-rule-explicit-sign"))                   i32 _lex-rule-explicit-sign)
(global $lex-rule-special-subsequent              (debug (export "lex-rule-special-subsequent"))              i32 _lex-rule-special-subsequent)
(global $lex-rule-inline-hex-escape               (debug (export "lex-rule-inline-hex-escape"))               i32 _lex-rule-inline-hex-escape)
(global $lex-rule-inline-hex-escape-prefix        (debug (export "lex-rule-inline-hex-escape-prefix"))        i32 _lex-rule-inline-hex-escape-prefix)
(global $lex-rule-hex-scalar-value                (debug (export "lex-rule-hex-scalar-value"))                i32 _lex-rule-hex-scalar-value)
(global $lex-rule-mnemonic-escape                 (debug (export "lex-rule-mnemonic-escape"))                 i32 _lex-rule-mnemonic-escape)
(global $lex-rule-backslash                       (debug (export "lex-rule-backslash"))                       i32 _lex-rule-backslash)
(global $lex-rule-mnemonic-escape-character       (debug (export "lex-rule-mnemonic-escape-character"))       i32 _lex-rule-mnemonic-escape-character)
(global $lex-rule-peculiar-identifier             (debug (export "lex-rule-peculiar-identifier"))             i32 _lex-rule-peculiar-identifier)
(global $lex-rule-peculiar-identifier/form-1      (debug (export "lex-rule-peculiar-identifier/form-1"))      i32 _lex-rule-peculiar-identifier/form-1)
(global $lex-rule-peculiar-identifier/form-2      (debug (export "lex-rule-peculiar-identifier/form-2"))      i32 _lex-rule-peculiar-identifier/form-2)
(global $lex-rule-dot                             (debug (export "lex-rule-dot"))                             i32 _lex-rule-dot)
(global $lex-rule-peculiar-identifier/form-3      (debug (export "lex-rule-peculiar-identifier/form-3"))      i32 _lex-rule-peculiar-identifier/form-3)
(global $lex-rule-dot-subsequent                  (debug (export "lex-rule-dot-subsequent"))                  i32 _lex-rule-dot-subsequent)
(global $lex-rule-sign-subsequent                 (debug (export "lex-rule-sign-subsequent"))                 i32 _lex-rule-sign-subsequent)
(global $lex-rule-at-sign                         (debug (export "lex-rule-at-sign"))                         i32 _lex-rule-at-sign)
(global $lex-rule-symbol-element                  (debug (export "lex-rule-symbol-element"))                  i32 _lex-rule-symbol-element)
(global $lex-rule-symbol-element/character        (debug (export "lex-rule-symbol-element/character"))        i32 _lex-rule-symbol-element/character)
(global $lex-rule-escaped-vertical-line           (debug (export "lex-rule-escaped-vertical-line"))           i32 _lex-rule-escaped-vertical-line)
(global $lex-rule-boolean                         (debug (export "lex-rule-boolean"))                         i32 _lex-rule-boolean)
(global $lex-rule-character                       (debug (export "lex-rule-character"))                       i32 _lex-rule-character)
(global $lex-rule-escaped-character               (debug (export "lex-rule-escaped-character"))               i32 _lex-rule-escaped-character)
(global $lex-rule-single-character                (debug (export "lex-rule-single-character"))                i32 _lex-rule-single-character)
(global $lex-rule-character-prefix                (debug (export "lex-rule-character-prefix"))                i32 _lex-rule-character-prefix)
(global $lex-rule-named-character                 (debug (export "lex-rule-named-character"))                 i32 _lex-rule-named-character)
(global $lex-rule-escaped-character-hex           (debug (export "lex-rule-escaped-character-hex"))           i32 _lex-rule-escaped-character-hex)
(global $lex-rule-character-hex-prefix            (debug (export "lex-rule-character-hex-prefix"))            i32 _lex-rule-character-hex-prefix)
(global $lex-rule-character-name                  (debug (export "lex-rule-character-name"))                  i32 _lex-rule-character-name)
(global $lex-rule-character-name/group-1          (debug (export "lex-rule-character-name/group-1"))          i32 _lex-rule-character-name/group-1)
(global $lex-rule-character-name/group-2          (debug (export "lex-rule-character-name/group-2"))          i32 _lex-rule-character-name/group-2)
(global $lex-rule-character-name/group-3          (debug (export "lex-rule-character-name/group-3"))          i32 _lex-rule-character-name/group-3)
(global $lex-rule-quoted-string                   (debug (export "lex-rule-quoted-string"))                   i32 _lex-rule-quoted-string)
(global $lex-rule-double-quote                    (debug (export "lex-rule-double-quote"))                    i32 _lex-rule-double-quote)
(global $lex-rule-string-elements                 (debug (export "lex-rule-string-elements"))                 i32 _lex-rule-string-elements)
(global $lex-rule-string-element                  (debug (export "lex-rule-string-element"))                  i32 _lex-rule-string-element)
(global $lex-rule-string-element/character        (debug (export "lex-rule-string-element/character"))        i32 _lex-rule-string-element/character)
(global $lex-rule-string-element/character-escape (debug (export "lex-rule-string-element/character-escape")) i32 _lex-rule-string-element/character-escape)
(global $lex-rule-escaped-double-quote            (debug (export "lex-rule-escaped-double-quote"))            i32 _lex-rule-escaped-double-quote)
(global $lex-rule-escaped-backslash               (debug (export "lex-rule-escaped-backslash"))               i32 _lex-rule-escaped-backslash)
(global $lex-rule-escaped-line-ending             (debug (export "lex-rule-escaped-line-ending"))             i32 _lex-rule-escaped-line-ending)
(global $lex-rule-some-intraline-whitespace       (debug (export "lex-rule-some-intraline-whitespace"))       i32 _lex-rule-some-intraline-whitespace)
(global $lex-rule-number                          (debug (export "lex-rule-number"))                          i32 _lex-rule-number)
(global $lex-rule-num-2                           (debug (export "lex-rule-num-2"))                           i32 _lex-rule-num-2)
(global $lex-rule-num-8                           (debug (export "lex-rule-num-8"))                           i32 _lex-rule-num-8)
(global $lex-rule-num-10                          (debug (export "lex-rule-num-10"))                          i32 _lex-rule-num-10)
(global $lex-rule-num-16                          (debug (export "lex-rule-num-16"))                          i32 _lex-rule-num-16)
(global $lex-rule-complex-16                      (debug (export "lex-rule-complex-16"))                      i32 _lex-rule-complex-16)
(global $lex-rule-complex-10                      (debug (export "lex-rule-complex-10"))                      i32 _lex-rule-complex-10)
(global $lex-rule-complex-8                       (debug (export "lex-rule-complex-8"))                       i32 _lex-rule-complex-8)
(global $lex-rule-complex-2                       (debug (export "lex-rule-complex-2"))                       i32 _lex-rule-complex-2)
(global $lex-rule-simple-im                       (debug (export "lex-rule-simple-im"))                       i32 _lex-rule-simple-im)
(global $lex-rule-unit-im                         (debug (export "lex-rule-unit-im"))                         i32 _lex-rule-unit-im)
(global $lex-rule-complex-i                       (debug (export "lex-rule-complex-i"))                       i32 _lex-rule-complex-i)
(global $lex-rule-infnan-im                       (debug (export "lex-rule-infnan-im"))                       i32 _lex-rule-infnan-im)
(global $lex-rule-complex-16/group-1              (debug (export "lex-rule-complex-16/group-1"))              i32 _lex-rule-complex-16/group-1)
(global $lex-rule-complex-10/group-1              (debug (export "lex-rule-complex-10/group-1"))              i32 _lex-rule-complex-10/group-1)
(global $lex-rule-complex-8/group-1               (debug (export "lex-rule-complex-8/group-1"))               i32 _lex-rule-complex-8/group-1)
(global $lex-rule-complex-2/group-1               (debug (export "lex-rule-complex-2/group-1"))               i32 _lex-rule-complex-2/group-1)
(global $lex-rule-complex-polar-16                (debug (export "lex-rule-complex-polar-16"))                i32 _lex-rule-complex-polar-16)
(global $lex-rule-complex-polar-10                (debug (export "lex-rule-complex-polar-10"))                i32 _lex-rule-complex-polar-10)
(global $lex-rule-complex-polar-8                 (debug (export "lex-rule-complex-polar-8"))                 i32 _lex-rule-complex-polar-8)
(global $lex-rule-complex-polar-2                 (debug (export "lex-rule-complex-polar-2"))                 i32 _lex-rule-complex-polar-2)
(global $lex-rule-complex-infnan-im-16            (debug (export "lex-rule-complex-infnan-im-16"))            i32 _lex-rule-complex-infnan-im-16)
(global $lex-rule-complex-infnan-im-10            (debug (export "lex-rule-complex-infnan-im-10"))            i32 _lex-rule-complex-infnan-im-10)
(global $lex-rule-complex-infnan-im-8             (debug (export "lex-rule-complex-infnan-im-8"))             i32 _lex-rule-complex-infnan-im-8)
(global $lex-rule-complex-infnan-im-2             (debug (export "lex-rule-complex-infnan-im-2"))             i32 _lex-rule-complex-infnan-im-2)
(global $lex-rule-complex-16/group-2              (debug (export "lex-rule-complex-16/group-2"))              i32 _lex-rule-complex-16/group-2)
(global $lex-rule-complex-10/group-2              (debug (export "lex-rule-complex-10/group-2"))              i32 _lex-rule-complex-10/group-2)
(global $lex-rule-complex-8/group-2               (debug (export "lex-rule-complex-8/group-2"))               i32 _lex-rule-complex-8/group-2)
(global $lex-rule-complex-2/group-2               (debug (export "lex-rule-complex-2/group-2"))               i32 _lex-rule-complex-2/group-2)
(global $lex-rule-full-complex-16                 (debug (export "lex-rule-full-complex-16"))                 i32 _lex-rule-full-complex-16)
(global $lex-rule-full-complex-10                 (debug (export "lex-rule-full-complex-10"))                 i32 _lex-rule-full-complex-10)
(global $lex-rule-full-complex-8                  (debug (export "lex-rule-full-complex-8"))                  i32 _lex-rule-full-complex-8)
(global $lex-rule-full-complex-2                  (debug (export "lex-rule-full-complex-2"))                  i32 _lex-rule-full-complex-2)
(global $lex-rule-complex-unit-im-16              (debug (export "lex-rule-complex-unit-im-16"))              i32 _lex-rule-complex-unit-im-16)
(global $lex-rule-complex-unit-im-10              (debug (export "lex-rule-complex-unit-im-10"))              i32 _lex-rule-complex-unit-im-10)
(global $lex-rule-complex-unit-im-8               (debug (export "lex-rule-complex-unit-im-8"))               i32 _lex-rule-complex-unit-im-8)
(global $lex-rule-complex-unit-im-2               (debug (export "lex-rule-complex-unit-im-2"))               i32 _lex-rule-complex-unit-im-2)
(global $lex-rule-complex-im-only-16              (debug (export "lex-rule-complex-im-only-16"))              i32 _lex-rule-complex-im-only-16)
(global $lex-rule-complex-im-only-10              (debug (export "lex-rule-complex-im-only-10"))              i32 _lex-rule-complex-im-only-10)
(global $lex-rule-complex-im-only-8               (debug (export "lex-rule-complex-im-only-8"))               i32 _lex-rule-complex-im-only-8)
(global $lex-rule-complex-im-only-2               (debug (export "lex-rule-complex-im-only-2"))               i32 _lex-rule-complex-im-only-2)
(global $lex-rule-real-16                         (debug (export "lex-rule-real-16"))                         i32 _lex-rule-real-16)
(global $lex-rule-real-10                         (debug (export "lex-rule-real-10"))                         i32 _lex-rule-real-10)
(global $lex-rule-real-8                          (debug (export "lex-rule-real-8"))                          i32 _lex-rule-real-8)
(global $lex-rule-real-2                          (debug (export "lex-rule-real-2"))                          i32 _lex-rule-real-2)
(global $lex-rule-signed-real-16                  (debug (export "lex-rule-signed-real-16"))                  i32 _lex-rule-signed-real-16)
(global $lex-rule-signed-real-10                  (debug (export "lex-rule-signed-real-10"))                  i32 _lex-rule-signed-real-10)
(global $lex-rule-signed-real-8                   (debug (export "lex-rule-signed-real-8"))                   i32 _lex-rule-signed-real-8)
(global $lex-rule-signed-real-2                   (debug (export "lex-rule-signed-real-2"))                   i32 _lex-rule-signed-real-2)
(global $lex-rule-ureal-16                        (debug (export "lex-rule-ureal-16"))                        i32 _lex-rule-ureal-16)
(global $lex-rule-ureal-10                        (debug (export "lex-rule-ureal-10"))                        i32 _lex-rule-ureal-10)
(global $lex-rule-ureal-8                         (debug (export "lex-rule-ureal-8"))                         i32 _lex-rule-ureal-8)
(global $lex-rule-ureal-2                         (debug (export "lex-rule-ureal-2"))                         i32 _lex-rule-ureal-2)
(global $lex-rule-urational-16                    (debug (export "lex-rule-urational-16"))                    i32 _lex-rule-urational-16)
(global $lex-rule-urational-10                    (debug (export "lex-rule-urational-10"))                    i32 _lex-rule-urational-10)
(global $lex-rule-urational-8                     (debug (export "lex-rule-urational-8"))                     i32 _lex-rule-urational-8)
(global $lex-rule-urational-2                     (debug (export "lex-rule-urational-2"))                     i32 _lex-rule-urational-2)
(global $lex-rule-slash                           (debug (export "lex-rule-slash"))                           i32 _lex-rule-slash)
(global $lex-rule-decimal-10                      (debug (export "lex-rule-decimal-10"))                      i32 _lex-rule-decimal-10)
(global $lex-rule-decimal-10-forms                (debug (export "lex-rule-decimal-10-forms"))                i32 _lex-rule-decimal-10-forms)
(global $lex-rule-dot-digits-10                   (debug (export "lex-rule-dot-digits-10"))                   i32 _lex-rule-dot-digits-10)
(global $lex-rule-digits-10                       (debug (export "lex-rule-digits-10"))                       i32 _lex-rule-digits-10)
(global $lex-rule-digits-dot-digits-10            (debug (export "lex-rule-digits-dot-digits-10"))            i32 _lex-rule-digits-dot-digits-10)
(global $lex-rule-digits-10?                      (debug (export "lex-rule-digits-10?"))                      i32 _lex-rule-digits-10?)
(global $lex-rule-uinteger-16                     (debug (export "lex-rule-uinteger-16"))                     i32 _lex-rule-uinteger-16)
(global $lex-rule-uinteger-10                     (debug (export "lex-rule-uinteger-10"))                     i32 _lex-rule-uinteger-10)
(global $lex-rule-uinteger-8                      (debug (export "lex-rule-uinteger-8"))                      i32 _lex-rule-uinteger-8)
(global $lex-rule-uinteger-2                      (debug (export "lex-rule-uinteger-2"))                      i32 _lex-rule-uinteger-2)
(global $lex-rule-prefix-16                       (debug (export "lex-rule-prefix-16"))                       i32 _lex-rule-prefix-16)
(global $lex-rule-prefix-10                       (debug (export "lex-rule-prefix-10"))                       i32 _lex-rule-prefix-10)
(global $lex-rule-prefix-8                        (debug (export "lex-rule-prefix-8"))                        i32 _lex-rule-prefix-8)
(global $lex-rule-prefix-2                        (debug (export "lex-rule-prefix-2"))                        i32 _lex-rule-prefix-2)
(global $lex-rule-infnan                          (debug (export "lex-rule-infnan"))                          i32 _lex-rule-infnan)
(global $lex-rule-inf-or-nan                      (debug (export "lex-rule-inf-or-nan"))                      i32 _lex-rule-inf-or-nan)
(global $lex-rule-suffix                          (debug (export "lex-rule-suffix"))                          i32 _lex-rule-suffix)
(global $lex-rule-suffix-sequence                 (debug (export "lex-rule-suffix-sequence"))                 i32 _lex-rule-suffix-sequence)
(global $lex-rule-exponent-marker                 (debug (export "lex-rule-exponent-marker"))                 i32 _lex-rule-exponent-marker)
(global $lex-rule-sign                            (debug (export "lex-rule-sign"))                            i32 _lex-rule-sign)
(global $lex-rule-exactness                       (debug (export "lex-rule-exactness"))                       i32 _lex-rule-exactness)
(global $lex-rule-radix-2                         (debug (export "lex-rule-radix-2"))                         i32 _lex-rule-radix-2)
(global $lex-rule-radix-8                         (debug (export "lex-rule-radix-8"))                         i32 _lex-rule-radix-8)
(global $lex-rule-radix-10                        (debug (export "lex-rule-radix-10"))                        i32 _lex-rule-radix-10)
(global $lex-rule-radix-16                        (debug (export "lex-rule-radix-16"))                        i32 _lex-rule-radix-16)
(global $lex-rule-digit-2                         (debug (export "lex-rule-digit-2"))                         i32 _lex-rule-digit-2)
(global $lex-rule-digit-8                         (debug (export "lex-rule-digit-8"))                         i32 _lex-rule-digit-8)
(global $lex-rule-digit-10                        (debug (export "lex-rule-digit-10"))                        i32 _lex-rule-digit-10)
(global $lex-rule-digit-16                        (debug (export "lex-rule-digit-16"))                        i32 _lex-rule-digit-16)
(global $lex-rule-digit-16/A-F                    (debug (export "lex-rule-digit-16/A-F"))                    i32 _lex-rule-digit-16/A-F)
(global $lex-rule-digit-16/a-f                    (debug (export "lex-rule-digit-16/a-f"))                    i32 _lex-rule-digit-16/a-f)
